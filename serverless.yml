org: passoz
app: e-core-challenge-passoz
service: e-core-challenge-passoz
frameworkVersion: '3'

custom:
  tableName: 'e-core-challenge-passoz-images'
  
provider:
  name: aws
  runtime: nodejs14.x
  apiGateway:
    binaryMediaTypes:
      - "image/jpeg"
      - "image/png"
      - "image/apng"
      - "image/webp"
      - "image/gif"
      - "image/avif"
      - "image/jpg"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - Fn::GetAtt: [ ImagesTable, Arn ]
        - Effect: Allow
          Action:
            - dynamodb:Query
          Resource: 'arn:aws:dynamodb:us-east-1:*:table/${self:custom.tableName}/index/*'
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:ListObject
            - s3:PutObject
          Resource: "arn:aws:s3:::e-core-challenge-passoz-images/*"
  environment:
    IMAGES_TABLE: ${self:custom.tableName}

functions:
  getMetadata:
    handler: handlers/getMetadata.getMetadata
    events:
      - httpApi:
          method: GET
          path: '/GetMetadata/{filename}'
  infoImages:
    handler: handlers/infoImages.infoImages
    events:
      - httpApi: 
          method: GET
          path: '/InfoImages'
  getImage:
    handler: handlers/getImage.getImage
    events:
      - httpApi: 
          method: GET
          path: '/GetImage/{filename}'
  extractMetadata:
    handler: handlers/extractMetadata.extractMetadata
    events:
      - s3: 
          bucket: e-core-challenge-passoz-images
          event: s3:ObjectCreated:*

resources:
  Resources:
    ImagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: filename
            AttributeType: S
          - AttributeName: size
            AttributeType: N
          - AttributeName: extension
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: filename
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: SizeIndex
            KeySchema:
              - AttributeName: id
                KeyType: HASH
              - AttributeName: size
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
          - IndexName: ExtensionIndex
            KeySchema:
              - AttributeName: id
                KeyType: HASH
              - AttributeName: extension
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
